# Generated by Django 2.1.7 on 2019-03-29 15:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField()),
                ('teams', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='DivisionRank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.PositiveSmallIntegerField()),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.Division')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DivisionSeed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.PositiveSmallIntegerField()),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.Division')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('phase', models.PositiveSmallIntegerField()),
                ('finished', models.BooleanField(default=False)),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.Division')),
                ('referee_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tournament.Group')),
            ],
        ),
        migrations.CreateModel(
            name='GroupRank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.PositiveSmallIntegerField()),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.Group')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GroupSeed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.PositiveSmallIntegerField()),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.Group')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phase_block', models.PositiveSmallIntegerField()),
                ('home_score', models.PositiveSmallIntegerField(null=True)),
                ('away_score', models.PositiveSmallIntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pitch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('game_number', models.PositiveSmallIntegerField(null=True)),
                ('match', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tournament.Match')),
                ('pitch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.Pitch')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='TeamPlaceholder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('team', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='tournament.Team')),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField()),
            ],
        ),
        migrations.AddField(
            model_name='schedule',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.Tournament'),
        ),
        migrations.AddField(
            model_name='pitch',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.Tournament'),
        ),
        migrations.AddField(
            model_name='match',
            name='away',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_matches', to='tournament.TeamPlaceholder'),
        ),
        migrations.AddField(
            model_name='match',
            name='division',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.Division'),
        ),
        migrations.AddField(
            model_name='match',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.Group'),
        ),
        migrations.AddField(
            model_name='match',
            name='home',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_matches', to='tournament.TeamPlaceholder'),
        ),
        migrations.AddField(
            model_name='match',
            name='referee',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referee_matches', to='tournament.TeamPlaceholder'),
        ),
        migrations.AddField(
            model_name='groupseed',
            name='teamPlaceholder',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tournament.TeamPlaceholder'),
        ),
        migrations.AddField(
            model_name='grouprank',
            name='teamPlaceholder',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tournament.TeamPlaceholder'),
        ),
        migrations.AddField(
            model_name='divisionseed',
            name='teamPlaceholder',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tournament.TeamPlaceholder'),
        ),
        migrations.AddField(
            model_name='divisionrank',
            name='teamPlaceholder',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tournament.TeamPlaceholder'),
        ),
        migrations.AddField(
            model_name='division',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.Tournament'),
        ),
    ]
